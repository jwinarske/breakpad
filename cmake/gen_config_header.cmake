INCLUDE(CheckIncludeFiles)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckPrototypeExists)
INCLUDE(CheckFileOffsetBits)

set(VERSION PACKAGE_VERSION)

IF ("cxx_std_11" IN_LIST CMAKE_CXX_COMPILE_FEATURES)
  SET(HAVE_CXX11 1)
ENDIF()

CHECK_INCLUDE_FILES("dlfcn.h;stdint.h;stddef.h;inttypes.h;stdlib.h;strings.h;string.h;float.h" EXIST_STD_HEADERS)

IF(EXIST_STD_HEADERS)
  CHECK_PROTOTYPE_EXISTS(memchr string.h EXISTS_MEMCHR)
  IF(EXISTS_MEMCHR)
    CHECK_PROTOTYPE_EXISTS(free stdlib.h EXISTS_FREE)
    IF(EXISTS_FREE)
      SET(STDC_HEADERS 1 CACHE INTERNAL "System has ANSI C header files")
      SET(HAVE_STRINGS_H 1)
      SET(HAVE_STRING_H 1)
      SET(HAVE_FLOAT_H 1)
      SET(HAVE_STDLIB_H 1)
      SET(HAVE_STDDEF_H 1)
      SET(HAVE_STDINT_H 1)
      SET(HAVE_INTTYPES_H 1)
      SET(HAVE_DLFCN_H 1)
    ENDIF()
  ENDIF()
ENDIF()

SET(CMAKE_THREAD_PREFER_PTHREAD TRUE)
FIND_PACKAGE(Threads)
SET(HAVE_PTHREAD THREADS_HAVE_PTHREAD_ARG)
IF(CMAKE_USE_PTHREADS_INIT)
    set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} "-pthread")
ENDIF()

CHECK_INCLUDE_FILES(a.out.h HAVE_A_OUT_H)
CHECK_INCLUDE_FILES(inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(sys/random.h HAVE_SYS_RANDOM_H)
CHECK_INCLUDE_FILES(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(unistd.h HAVE_UNISTD_H)

CHECK_FUNCTION_EXISTS(arc4random HAVE_ARC4RANDOM)
CHECK_FUNCTION_EXISTS(getrandom HAVE_GETRANDOM)

# Number of bits in a file offset, on hosts where this is settable.
CHECK_FILE_OFFSET_BITS ()


CONFIGURE_FILE ("${ROOT}/cmake/config.h.in" "${ROOT}/src/config.h")

